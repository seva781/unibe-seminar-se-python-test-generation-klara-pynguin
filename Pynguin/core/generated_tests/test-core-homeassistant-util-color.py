# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
# Line Coverage: 79.93% Branch Coverage: 83.33% Mutation Score: 21.92%
import pytest
import color as module_0
import attr.validators as module_1
import inspect as module_2
import ast as module_3
import platform as module_4
import attr.converters as module_5


def test_case_0():
    float_0 = 7830.1
    tuple_0 = module_0.color_hs_to_xy(float_0, float_0)


def test_case_1():
    bool_0 = True
    tuple_0 = module_0.color_xy_to_RGB(bool_0, bool_0)


def test_case_2():
    bool_0 = True
    tuple_0 = module_0.color_rgb_to_rgbww(bool_0, bool_0, bool_0, bool_0, bool_0)


@pytest.mark.xfail(strict=True)
def test_case_3():
    float_0 = 911.0
    tuple_0 = module_0.color_hsb_to_RGB(float_0, float_0, float_0)
    bool_0 = True
    bool_1 = False
    str_0 = module_0.color_rgb_to_hex(bool_0, bool_1, bool_0)
    assert str_0 == "010001"
    str_1 = "MG(}6u;j"
    module_0.rgb_hex_to_rgb_list(str_1)


def test_case_4():
    float_0 = 1110.613
    tuple_0 = module_0.color_temperature_to_rgb(float_0)


def test_case_5():
    float_0 = 729.72
    tuple_0 = module_0.color_temperature_to_rgb(float_0)


@pytest.mark.xfail(strict=True)
def test_case_6():
    module_0.RGBColor()


def test_case_7():
    int_0 = -1966
    tuple_0 = module_0.color_RGB_to_hs(int_0, int_0, int_0)


def test_case_8():
    bool_0 = False
    tuple_0 = module_0.color_hsv_to_RGB(bool_0, bool_0, bool_0)


def test_case_9():
    bool_0 = True
    tuple_0 = module_0.color_hs_to_RGB(bool_0, bool_0)


@pytest.mark.xfail(strict=True)
def test_case_10():
    float_0 = 265.1
    bool_0 = True
    tuple_0 = module_0.color_hs_to_RGB(float_0, bool_0)
    int_0 = module_0.color_temperature_kelvin_to_mired(bool_0)
    assert int_0 == 1000000
    list_0 = [int_0, float_0, tuple_0]
    r_g_b_color_0 = module_0.RGBColor(*list_0)
    tuple_1 = module_0.color_xy_to_hs(bool_0, bool_0)
    module_0.color_name_to_rgb(int_0)


@pytest.mark.xfail(strict=True)
def test_case_11():
    bool_0 = True
    tuple_0 = module_0.color_rgb_to_rgbw(bool_0, bool_0, bool_0)
    tuple_1 = module_0.color_rgb_to_rgbw(bool_0, bool_0, bool_0)
    var_0 = module_1.ge(tuple_1)
    var_1 = var_0.__repr__()
    assert var_1 == "<Validator for x >= (0, 0, 0, 1)>"
    var_0.visit_While(tuple_1)


def test_case_12():
    int_0 = -178
    tuple_0 = module_0.color_rgbw_to_rgb(int_0, int_0, int_0, int_0)


def test_case_13():
    bool_0 = False
    str_0 = module_0.color_rgb_to_hex(bool_0, bool_0, bool_0)
    assert str_0 == "000000"


def test_case_14():
    float_0 = 1110.613
    tuple_0 = module_0.color_temperature_to_hs(float_0)


@pytest.mark.xfail(strict=True)
def test_case_15():
    none_type_0 = None
    module_0.color_temperature_kelvin_to_mired(none_type_0)


def test_case_16():
    bool_0 = False
    bool_1 = True
    tuple_0 = module_0.color_xy_to_RGB(bool_1, bool_1)
    tuple_1 = module_0.color_temperature_to_rgb(bool_1)
    tuple_2 = module_0.color_hs_to_xy(bool_0, bool_0)


def test_case_17():
    float_0 = 1904.493626
    tuple_0 = module_0.color_temperature_to_rgb(float_0)


def test_case_18():
    str_0 = "6A283z9Ph\nCm4%qQuU"
    with pytest.raises(ValueError):
        module_0.color_name_to_rgb(str_0)


@pytest.mark.xfail(strict=True)
def test_case_19():
    int_0 = 236
    float_0 = -1.4075383528042458
    tuple_0 = module_0.color_hsb_to_RGB(int_0, float_0, int_0)
    int_1 = -958
    none_type_0 = None
    module_0.color_rgb_to_rgbww(int_1, int_1, none_type_0, int_1, none_type_0)


def test_case_20():
    float_0 = -1569.014
    int_0 = module_0.color_temperature_mired_to_kelvin(float_0)
    assert int_0 == -638


@pytest.mark.xfail(strict=True)
def test_case_21():
    int_0 = 161
    tuple_0 = module_0.color_rgb_to_rgbww(int_0, int_0, int_0, int_0, int_0)
    int_1 = -1516
    tuple_1 = module_0.color_rgb_to_rgbw(int_1, int_1, int_1)
    none_type_0 = None
    int_2 = 1465
    float_0 = 911.0
    module_0.color_hsb_to_RGB(int_2, float_0, none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_22():
    bool_0 = True
    tuple_0 = module_0.color_RGB_to_xy_brightness(bool_0, bool_0, bool_0)
    module_0.color_hs_to_xy(bool_0, bool_0, bool_0)


def test_case_23():
    bool_0 = False
    tuple_0 = module_0.color_xy_to_RGB(bool_0, bool_0)


def test_case_24():
    bool_0 = True
    tuple_0 = module_0.color_RGB_to_xy_brightness(bool_0, bool_0, bool_0)
    int_0 = -226
    bool_1 = False
    tuple_1 = (int_0, int_0, int_0, bool_1, int_0)
    int_1 = -2748
    tuple_2 = module_0.rgbww_to_color_temperature(tuple_1, int_1, int_0)
    tuple_3 = module_0.color_hsb_to_RGB(int_0, int_0, int_0)
    tuple_4 = module_0.color_temperature_to_rgb(int_1)
    none_type_0 = None
    var_0 = module_2.isgenerator(none_type_0)
    var_1 = var_0.__repr__()
    int_2 = 721
    tuple_5 = (var_1, var_0, bool_1, int_2, var_1)
    var_2 = module_2.isroutine(var_1)
    var_3 = module_2.isabstract(tuple_5)
    with pytest.raises(ValueError):
        module_0.color_name_to_rgb(var_1)


@pytest.mark.xfail(strict=True)
def test_case_25():
    int_0 = 418
    tuple_0 = module_0.color_xy_brightness_to_RGB(int_0, int_0, int_0)
    bool_0 = False
    bool_1 = True
    tuple_1 = module_0.color_RGB_to_xy_brightness(bool_1, bool_1, bool_0)
    tuple_2 = module_0.color_hsb_to_RGB(int_0, int_0, int_0)
    tuple_3 = module_0.color_temperature_to_rgb(int_0)
    bool_2 = True
    int_1 = 1219
    tuple_4 = module_0.color_temperature_to_rgb(int_1)
    bool_3 = False
    none_type_0 = None
    var_0 = module_2.isabstract(bool_3)
    var_1 = var_0.__repr__()
    int_2 = -4176
    tuple_5 = module_0.color_hs_to_xy(int_2, int_2)
    int_3 = -642
    module_0.color_RGB_to_hs(none_type_0, int_3, bool_2)


@pytest.mark.xfail(strict=True)
def test_case_26():
    int_0 = -437
    tuple_0 = module_0.color_rgb_to_rgbww(int_0, int_0, int_0, int_0, int_0)
    bool_0 = True
    bool_1 = True
    float_0 = 101152999998.86711
    tuple_1 = module_0.color_rgb_to_rgbww(bool_0, bool_0, bool_0, bool_1, bool_1)
    tuple_2 = (int_0, int_0, int_0, bool_0, int_0)
    int_1 = -2755
    tuple_3 = module_0.rgbww_to_color_temperature(tuple_2, int_1, int_1)
    tuple_4 = module_0.color_hsb_to_RGB(int_0, int_0, int_0)
    int_2 = 1243
    tuple_5 = module_0.color_xy_to_hs(int_0, float_0)
    tuple_6 = module_0.color_temperature_to_rgb(int_2)
    bool_2 = True
    float_1 = 1665.0
    tuple_7 = module_0.color_hsb_to_RGB(bool_2, float_1, int_2)
    bool_3 = False
    module_0.color_rgbww_to_rgb(bool_3, bool_3, int_0, tuple_6, tuple_6, int_2, int_1)


@pytest.mark.xfail(strict=True)
def test_case_27():
    int_0 = 418
    tuple_0 = module_0.color_xy_brightness_to_RGB(int_0, int_0, int_0)
    bool_0 = False
    tuple_1 = module_0.color_xy_to_RGB(bool_0, bool_0)
    bool_1 = True
    tuple_2 = module_0.color_temperature_to_rgb(int_0)
    int_1 = -2483
    tuple_3 = module_0.color_hs_to_xy(int_1, bool_0)
    str_0 = "Y#Zr"
    tuple_4 = module_0.color_hsb_to_RGB(bool_1, bool_0, int_1)
    module_0.rgb_hex_to_rgb_list(str_0)


@pytest.mark.xfail(strict=True)
def test_case_28():
    bool_0 = True
    none_type_0 = None
    int_0 = 1264
    int_1 = 13
    int_2 = -1191
    tuple_0 = module_0.color_RGB_to_hsv(bool_0, int_2, bool_0)
    module_0.color_rgbww_to_rgb(none_type_0, bool_0, int_0, int_0, int_0, bool_0, int_1)


@pytest.mark.xfail(strict=True)
def test_case_29():
    none_type_0 = None
    module_0.cross_product(none_type_0, none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_30():
    bool_0 = True
    tuple_0 = module_0.color_xy_brightness_to_RGB(bool_0, bool_0, bool_0)
    int_0 = -33
    float_0 = 911.0
    tuple_1 = module_0.color_hsb_to_RGB(int_0, int_0, float_0)
    str_0 = ""
    module_0.rgb_hex_to_rgb_list(str_0)


@pytest.mark.xfail(strict=True)
def test_case_31():
    bool_0 = False
    tuple_0 = module_0.color_xy_to_RGB(bool_0, bool_0)
    bool_1 = True
    tuple_1 = module_0.color_hs_to_xy(bool_0, bool_1)
    bool_2 = False
    bool_3 = False
    int_0 = 3
    module_0.color_temperature_to_rgbww(bool_2, bool_3, int_0, bool_2)


@pytest.mark.xfail(strict=True)
def test_case_32():
    bool_0 = True
    tuple_0 = module_0.color_xy_to_RGB(bool_0, bool_0)
    bool_1 = True
    tuple_1 = module_0.color_temperature_to_rgb(bool_0)
    bool_2 = False
    tuple_2 = module_0.color_hs_to_xy(bool_1, bool_2)
    var_0 = module_1.le(bool_2)
    var_1 = module_3.iter_fields(var_0)
    var_2 = var_1.__eq__(var_1)
    var_3 = module_2.isfunction(var_0)
    int_0 = 946
    var_4 = var_2.__eq__(var_3)
    var_5 = int_0.__le__(var_0)
    module_0.get_distance_between_two_points(var_1, var_4)


@pytest.mark.xfail(strict=True)
def test_case_33():
    int_0 = 418
    tuple_0 = module_0.color_xy_brightness_to_RGB(int_0, int_0, int_0)
    var_0 = module_4.python_version_tuple()
    module_0.color_xy_brightness_to_RGB(var_0, tuple_0, var_0, int_0)


@pytest.mark.xfail(strict=True)
def test_case_34():
    bool_0 = False
    none_type_0 = None
    bool_1 = False
    tuple_0 = module_0.color_RGB_to_xy_brightness(bool_1, bool_0, bool_0, none_type_0)
    tuple_1 = module_0.color_xy_to_RGB(bool_1, bool_1)
    bool_2 = True
    tuple_2 = module_0.color_temperature_to_rgb(bool_1)
    bool_3 = True
    tuple_3 = module_0.color_hs_to_xy(bool_2, bool_3)
    str_0 = "Got:p| "
    module_2.findsource(str_0)


def test_case_35():
    bool_0 = False
    tuple_0 = (bool_0, bool_0)
    tuple_1 = module_0.match_max_scale(tuple_0, tuple_0)
    tuple_2 = module_0.color_xy_brightness_to_RGB(bool_0, bool_0, bool_0)
    int_0 = 1465
    bool_1 = False
    bool_2 = True
    tuple_3 = module_0.color_RGB_to_xy_brightness(int_0, bool_1, bool_2)
    int_1 = -84
    with pytest.raises(ValueError):
        module_5.to_bool(int_1)


@pytest.mark.xfail(strict=True)
def test_case_36():
    int_0 = 418
    tuple_0 = module_0.color_xy_brightness_to_RGB(int_0, int_0, int_0)
    float_0 = 911.0
    tuple_1 = module_0.color_hsb_to_RGB(int_0, int_0, float_0)
    bool_0 = True
    bool_1 = False
    str_0 = module_0.color_rgb_to_hex(bool_0, bool_1, bool_0)
    assert str_0 == "010001"
    list_0 = module_0.rgb_hex_to_rgb_list(str_0)
    module_2.findsource(tuple_1)


@pytest.mark.xfail(strict=True)
def test_case_37():
    int_0 = 418
    int_1 = -423
    tuple_0 = module_0.color_rgb_to_rgbww(int_1, int_0, int_0, int_0, int_1)
    tuple_1 = module_0.color_xy_brightness_to_RGB(int_0, int_0, int_0)
    bool_0 = True
    tuple_2 = module_0.color_RGB_to_xy_brightness(bool_0, bool_0, bool_0)
    int_2 = -210
    tuple_3 = module_0.color_temperature_to_hs(bool_0)
    tuple_4 = module_0.color_rgb_to_rgbww(int_0, bool_0, int_2, bool_0, bool_0)
    int_3 = -2755
    tuple_5 = module_0.rgbww_to_color_temperature(tuple_4, int_3, int_2)
    tuple_6 = module_0.color_hsb_to_RGB(int_0, int_0, int_0)
    int_4 = 179
    tuple_7 = module_0.color_hsb_to_RGB(int_4, int_2, int_0)
    int_5 = 1243
    tuple_8 = module_0.color_temperature_to_rgb(int_5)
    module_0.color_xy_to_RGB(int_5, int_2, int_0)


def test_case_38():
    int_0 = 418
    int_1 = -423
    tuple_0 = module_0.color_rgb_to_rgbww(int_1, int_0, int_0, int_0, int_1)


@pytest.mark.xfail(strict=True)
def test_case_39():
    bool_0 = False
    bool_1 = True
    tuple_0 = module_0.color_RGB_to_xy_brightness(bool_1, bool_1, bool_0)
    float_0 = 101152999998.86711
    tuple_1 = module_0.color_temperature_to_hs(float_0)
    tuple_2 = module_0.color_rgb_to_rgbww(bool_0, bool_0, bool_0, bool_1, bool_1)
    int_0 = -2755
    tuple_3 = module_0.color_hsb_to_RGB(int_0, int_0, int_0)
    tuple_4 = module_0.color_xy_to_hs(int_0, float_0)
    bool_2 = True
    int_1 = 683
    module_0.color_rgbww_to_rgb(bool_0, tuple_3, bool_1, bool_2, bool_0, int_1, float_0)


def test_case_40():
    bool_0 = False
    bool_1 = True
    int_0 = -540
    tuple_0 = module_0.color_rgbww_to_rgb(
        bool_0, bool_0, bool_0, bool_0, bool_0, bool_1, int_0
    )
    int_1 = 418
    int_2 = -425
    tuple_1 = module_0.color_rgb_to_rgbww(int_2, int_1, int_1, int_1, int_2)
    tuple_2 = module_0.color_xy_brightness_to_RGB(int_1, int_1, int_1)
    with pytest.raises(TypeError):
        module_1.matches_re(int_0)


def test_case_41():
    int_0 = 310
    int_1 = -425
    tuple_0 = module_0.color_rgb_to_rgbww(int_1, int_0, int_0, int_0, int_1)
    tuple_1 = module_0.color_xy_brightness_to_RGB(int_0, int_0, int_0)
    bool_0 = False
    bool_1 = True
    bool_2 = True
    tuple_2 = module_0.color_RGB_to_xy(bool_0, bool_2, bool_0)
    int_2 = 912
    tuple_3 = module_0.color_rgb_to_rgbww(int_0, bool_0, int_2, bool_1, bool_1)
    tuple_4 = module_0.color_hsb_to_RGB(int_0, int_0, int_0)
    tuple_5 = module_0.color_temperature_to_rgb(int_0)
    tuple_6 = module_1.get_disabled()


def test_case_42():
    bool_0 = True
    tuple_0 = module_0.color_rgbww_to_rgb(
        bool_0, bool_0, bool_0, bool_0, bool_0, bool_0, bool_0
    )
    int_0 = 273
    int_1 = -425
    tuple_1 = module_0.color_rgb_to_rgbww(int_1, int_0, int_0, int_0, int_1)
    tuple_2 = module_0.color_xy_brightness_to_RGB(int_0, int_0, int_0)
    bool_1 = False
    bool_2 = True
    bool_3 = True
    tuple_3 = module_0.color_RGB_to_xy(bool_0, bool_3, bool_0)
    int_2 = 912
    tuple_4 = module_0.color_rgb_to_rgbww(int_0, bool_1, int_2, bool_2, bool_2)
    int_3 = -2755
    tuple_5 = module_0.rgbww_to_color_temperature(tuple_4, int_3, int_2)
    tuple_6 = module_0.color_hsb_to_RGB(int_0, int_0, int_0)
    tuple_7 = module_0.color_temperature_to_rgb(int_0)
    tuple_8 = module_0.color_temperature_to_rgb(int_2)
    str_0 = "#Z_"
    with pytest.raises(ValueError):
        module_0.color_name_to_rgb(str_0)


def test_case_43():
    int_0 = 418
    int_1 = -423
    tuple_0 = module_0.color_rgb_to_rgbww(int_1, int_0, int_0, int_0, int_1)
    tuple_1 = module_0.color_xy_brightness_to_RGB(int_0, int_0, int_0)
    int_2 = 179
    tuple_2 = module_0.color_hsb_to_RGB(int_2, int_1, int_0)


@pytest.mark.xfail(strict=True)
def test_case_44():
    int_0 = 418
    int_1 = -374
    tuple_0 = module_0.color_rgb_to_rgbww(int_1, int_0, int_0, int_0, int_1)
    tuple_1 = module_0.color_xy_brightness_to_RGB(int_0, int_0, int_0)
    bool_0 = True
    tuple_2 = module_0.color_RGB_to_xy_brightness(bool_0, bool_0, bool_0)
    int_2 = -210
    float_0 = 746.842664
    tuple_3 = module_0.color_temperature_to_hs(float_0)
    tuple_4 = module_0.color_rgb_to_rgbww(int_0, bool_0, int_2, bool_0, bool_0)
    int_3 = -2755
    tuple_5 = module_0.rgbww_to_color_temperature(tuple_4, int_3, int_2)
    tuple_6 = module_0.color_hsb_to_RGB(int_0, int_0, int_0)
    int_4 = 66
    tuple_7 = module_0.color_hsb_to_RGB(int_4, int_2, int_0)
    int_5 = 1243
    tuple_8 = module_0.color_temperature_to_rgb(int_5)
    int_6 = module_0.color_temperature_kelvin_to_mired(float_0)
    assert int_6 == 1338
    module_2.ArgInfo()
