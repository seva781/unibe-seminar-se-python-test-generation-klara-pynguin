# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import helpers as module_0


def test_case_0():
    float_0 = -2194.0
    var_0 = module_0.normalize_hue_brightness(float_0)
    assert var_0 == pytest.approx(-860.3921568627451, abs=0.01, rel=0.01)


def test_case_1():
    none_type_0 = None
    var_0 = module_0.normalize_hue_brightness(none_type_0)
    int_0 = 375
    var_1 = module_0.normalize_hue_brightness(int_0)
    assert var_1 == pytest.approx(147.05882352941177, abs=0.01, rel=0.01)


def test_case_2():
    int_0 = -2471
    var_0 = module_0.normalize_hue_brightness(int_0)
    assert var_0 == pytest.approx(-969.0196078431372, abs=0.01, rel=0.01)
    bool_0 = True
    var_1 = module_0.normalize_hue_colortemp(var_0)
    assert var_1 == 153
    var_2 = module_0.normalize_hue_colortemp(bool_0)
    assert var_2 == 153
    var_3 = module_0.normalize_hue_transition(var_2)
    assert var_3 == 153000


def test_case_3():
    float_0 = 740.979884
    var_0 = module_0.normalize_hue_brightness(float_0)
    assert var_0 == pytest.approx(290.5803466666666, abs=0.01, rel=0.01)
    none_type_0 = None
    var_1 = module_0.normalize_hue_transition(none_type_0)
    var_2 = module_0.normalize_hue_transition(none_type_0)


def test_case_4():
    none_type_0 = None
    var_0 = module_0.normalize_hue_brightness(none_type_0)
    int_0 = 1612
    var_1 = module_0.normalize_hue_colortemp(int_0)
    assert var_1 == 500
    var_2 = module_0.normalize_hue_brightness(var_1)
    assert var_2 == pytest.approx(196.078431372549, abs=0.01, rel=0.01)


@pytest.mark.xfail(strict=True)
def test_case_5():
    none_type_0 = None
    var_0 = module_0.normalize_hue_colortemp(none_type_0)
    str_0 = "y0%;}bLlDHAIhU\rFC;"
    int_0 = 178
    var_1 = module_0.normalize_hue_transition(int_0)
    assert var_1 == 178000
    module_0.normalize_hue_colortemp(str_0)
